name: First responder docs-content
on:
  pull_request:
    types: [reopened, opened, ready_for_review, unlabeled]

jobs:
  first-responder-triage:
    if: github.repository == 'spacelysprocketsinc/my-repo' && github.event.pull_request.draft == false && github.event.action != 'unlabeled'
    runs-on: ubuntu-latest

    steps:
    - name: Check if the event originated from a team member
      uses: actions/github-script@v2.0.0
      id: set-result
      with:
        github-token: ${{secrets.MY_PAT}}
        result-encoding: string
        script: |
          const repoName = context.payload.repository.name
          const ownerName = context.payload.repository.owner.login
          const issueNumber = (context.eventName === "issues") ? context.payload.issue.number : context.payload.number
          const updatedIssueInformation = await github.issues.get({
            owner: ownerName,
            repo: repoName,
            issue_number: issueNumber
          })
          const teamMembers = await github.request(
            `/orgs/spacelysprocketsinc/teams/docs/members`
          )
          const logins = teamMembers.data.map(member => member.login)
          if (logins.some(login => login === updatedIssueInformation.data.user.login)) {
            console.log(`This issue or pull request was authored by a member of the github/docs team.`)
            return 'true'
          }
          console.log(`This issue or pull request was authored by an external contributor.`)
          return 'false'
    - name: Label external contributor pull requests with docs-content-fr
      uses: rachmari/labeler@v1.0.4
      if: steps.set-result.outputs.result == 'false'
      with:
        repo-token: "${{ secrets.MY_PAT }}"
        add-labels: "docs-content-fr"
    - name: Triage to FR PR project column
      uses: rachmari/actions-add-new-issue-to-column@v1.1.1
      if: steps.set-result.outputs.result == 'false'
      with:
        action-token: ${{ secrets.MY_PAT }}
        project-url: "https://github.com/SpacelySprocketsInc/my-repo/projects/1"
        column-name: "FR issues"

  first-responder-label-removed:
    if: github.event.label.name == 'docs-content-fr' && github.event.action == 'unlabeled'
    runs-on: ubuntu-latest

    steps:
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"
    - name: Remove card from project
      uses: actions/github-script@v2.0.0
      with:
        github-token: ${{secrets.MY_PAT}}
        result-encoding: string
        script: |
          const issueToRemove = context.payload.number
          const cards = await github.projects.listCards({
            column_id: 10237741
          })
          cards.data.forEach(card => {
            if (card.content_url) {
              const cardIssueNumber = parseInt(card.content_url.split('/').pop(), 10)
              if (cardIssueNumber === issueToRemove) {
                const cards = github.projects.deleteCard({
                  card_id: card.id
                })
              }
            }
          })
